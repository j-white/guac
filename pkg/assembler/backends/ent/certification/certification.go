// Code generated by ent, DO NOT EDIT.

package certification

import (
	"fmt"

	"entgo.io/ent/dialect/gremlin/graph/dsl"
)

const (
	// Label holds the string label denoting the certification type in the database.
	Label = "certification"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSourceID holds the string denoting the source_id field in the database.
	FieldSourceID = "source_id"
	// FieldPackageVersionID holds the string denoting the package_version_id field in the database.
	FieldPackageVersionID = "package_version_id"
	// FieldPackageNameID holds the string denoting the package_name_id field in the database.
	FieldPackageNameID = "package_name_id"
	// FieldArtifactID holds the string denoting the artifact_id field in the database.
	FieldArtifactID = "artifact_id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldJustification holds the string denoting the justification field in the database.
	FieldJustification = "justification"
	// FieldOrigin holds the string denoting the origin field in the database.
	FieldOrigin = "origin"
	// FieldCollector holds the string denoting the collector field in the database.
	FieldCollector = "collector"
	// EdgeSource holds the string denoting the source edge name in mutations.
	EdgeSource = "source"
	// EdgePackageVersion holds the string denoting the package_version edge name in mutations.
	EdgePackageVersion = "package_version"
	// EdgeAllVersions holds the string denoting the all_versions edge name in mutations.
	EdgeAllVersions = "all_versions"
	// EdgeArtifact holds the string denoting the artifact edge name in mutations.
	EdgeArtifact = "artifact"
	// SourceLabel holds the string label denoting the source edge type in the database.
	SourceLabel = "certification_source"
	// PackageVersionLabel holds the string label denoting the package_version edge type in the database.
	PackageVersionLabel = "certification_package_version"
	// AllVersionsLabel holds the string label denoting the all_versions edge type in the database.
	AllVersionsLabel = "certification_all_versions"
	// ArtifactLabel holds the string label denoting the artifact edge type in the database.
	ArtifactLabel = "certification_artifact"
)

// Type defines the type for the "type" enum field.
type Type string

// TypeGOOD is the default value of the Type enum.
const DefaultType = TypeGOOD

// Type values.
const (
	TypeGOOD Type = "GOOD"
	TypeBAD  Type = "BAD"
)

func (_type Type) String() string {
	return string(_type)
}

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type Type) error {
	switch _type {
	case TypeGOOD, TypeBAD:
		return nil
	default:
		return fmt.Errorf("certification: invalid enum value for type field: %q", _type)
	}
}

// OrderOption defines the ordering options for the Certification queries.
type OrderOption func(*dsl.Traversal)
